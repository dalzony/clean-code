Ch8. 경계

- 경계? (Boundary)
내부에서 외부 코드를 사용하여 두 코드가 연결되는 부분.
깔끔하게 처리해야 할 필요가 있다.

* 외부 코드 예) 패키지, 오픈 소스, 다른 팀이 제공하는 컴포넌트
(이 책에서는 대표적으로 Log4j의 사례를 선택)

- 문제 발생 원인?
프레임워크 제공자 - 적용성을 위해 가능한한 많은 기능을 제공하려고 함 
프레임워크 사용자 - 본인이 원하는 기능만 최적으로 사용하기를 원함
--> 충돌발생

경계 깔끔하게 처리하는 방법

1.
문제: 가독성
방법: 제너릭(Generic) 사용

Generic? 
객체<객체> 형태의 코드
Java 5 이상부터제공 (c++은 기본)

ex)
Map sensors = new HashMap();
Sensor s = (Sensor) sensors.get(sensorsId)

to

Map<Sensor> = new HashMap<Sensor();
Sensor s = sensors.get(sensorId);

2. 
문제: 사용자가 필요하지 않는 기능까지 제공한다.
방법: 캡슐화로 인터페이스 반환 부분 최소화




